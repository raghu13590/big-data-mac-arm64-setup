

services:
  namenode:
    build:
      context: ${BUILD_CONTEXT}
      args:
        HADOOP_VERSION: 3.3.6
        HIVE_VERSION: 4.0.1
        MAVEN_OPTS: -Xms512m -Xmx8192m
        JAVA_HOME: /usr/lib/jvm/java-11-openjdk-arm64
        MAVEN_HOME: /usr/share/maven
        TZ: UTC
        LANG: en_US.UTF-8
        LANGUAGE: en_US:en
        LC_ALL: en_US.UTF-8
        PYTHONIOENCODING: utf-8
        POSTGRES_JDBC_VERSION: 42.6.0
        HADOOP_USER: hadoop
        HIVE_USER: hive
        SUPERGROUP: supergroup
    environment:
      HDFS_WAREHOUSE_DIR: /user/hive/warehouse
      HDFS_STAGING_DIR: /tmp/hadoop-yarn/staging
      HDFS_OWNER: hive:hadoop
      HDFS_PERMISSIONS: 777
    container_name: namenode
    hostname: namenode
    ports:
      - "9870:9870"
    volumes:
      - ${CONFIGS_DIR}:${HADOOP_CONF_DIR}
      - ${APP_DATA_DIR}/${NAMENODE}:/hadoop/dfs/name
      - ${APP_DATA_DIR}/datasets:/datasets
    command: namenode
    networks:
      - big-data-network
    healthcheck:
      interval: 30s
      timeout: 10s
      retries: 5
      test: [ "CMD-SHELL", "nc -zv namenode 9000" ]

  datanode1:
    build:
      context: ${BUILD_CONTEXT}
      args:
        HADOOP_VERSION: 3.3.6
        HIVE_VERSION: 4.0.1
        MAVEN_OPTS: -Xms512m -Xmx8192m
        JAVA_HOME: /usr/lib/jvm/java-11-openjdk-arm64
        MAVEN_HOME: /usr/share/maven
        TZ: UTC
        LANG: en_US.UTF-8
        LANGUAGE: en_US:en
        LC_ALL: en_US.UTF-8
        PYTHONIOENCODING: utf-8
        POSTGRES_JDBC_VERSION: 42.6.0
        HADOOP_USER: hadoop
        HIVE_USER: hive
        SUPERGROUP: supergroup
    environment:
      HDFS_WAREHOUSE_DIR: /user/hive/warehouse
      HDFS_STAGING_DIR: /tmp/hadoop-yarn/staging
      HDFS_OWNER: hive:hadoop
      HDFS_PERMISSIONS: 777
    container_name: datanode1
    hostname: datanode1
    ports:
      - "9864:9864"
    depends_on:
      - namenode
    volumes:
      - ${CONFIGS_DIR}:${HADOOP_CONF_DIR}
      - ${APP_DATA_DIR}/${DATANODE1}:/hadoop/dfs/data
      - ${APP_DATA_DIR}/datasets:/datasets
    command: datanode
    networks:
      - big-data-network
    healthcheck:
      interval: 30s
      timeout: 10s
      retries: 5
      test: [ "CMD-SHELL", "curl -f http://localhost:9864" ]

  datanode2:
    build:
      context: ${BUILD_CONTEXT}
      args:
        HADOOP_VERSION: 3.3.6
        HIVE_VERSION: 4.0.1
        MAVEN_OPTS: -Xms512m -Xmx8192m
        JAVA_HOME: /usr/lib/jvm/java-11-openjdk-arm64
        MAVEN_HOME: /usr/share/maven
        TZ: UTC
        LANG: en_US.UTF-8
        LANGUAGE: en_US:en
        LC_ALL: en_US.UTF-8
        PYTHONIOENCODING: utf-8
        POSTGRES_JDBC_VERSION: 42.6.0
        HADOOP_USER: hadoop
        HIVE_USER: hive
        SUPERGROUP: supergroup
    environment:
      HDFS_WAREHOUSE_DIR: /user/hive/warehouse
      HDFS_STAGING_DIR: /tmp/hadoop-yarn/staging
      HDFS_OWNER: hive:hadoop
      HDFS_PERMISSIONS: 777
    container_name: datanode2
    hostname: datanode2
    ports:
      - "9865:9864"
    depends_on:
      - namenode
    volumes:
      - ${CONFIGS_DIR}:${HADOOP_CONF_DIR}
      - ${APP_DATA_DIR}/${DATANODE2}:/hadoop/dfs/data
      - ${APP_DATA_DIR}/datasets:/datasets
    command: datanode
    networks:
      - big-data-network
    healthcheck:
      interval: 30s
      timeout: 10s
      retries: 5
      test: [ "CMD-SHELL", "curl -f http://localhost:9864" ]

  resourcemanager:
    build:
      context: ${BUILD_CONTEXT}
      args:
        HADOOP_VERSION: 3.3.6
        HIVE_VERSION: 4.0.1
        MAVEN_OPTS: -Xms512m -Xmx8192m
        JAVA_HOME: /usr/lib/jvm/java-11-openjdk-arm64
        MAVEN_HOME: /usr/share/maven
        TZ: UTC
        LANG: en_US.UTF-8
        LANGUAGE: en_US:en
        LC_ALL: en_US.UTF-8
        PYTHONIOENCODING: utf-8
        POSTGRES_JDBC_VERSION: 42.6.0
        HADOOP_USER: hadoop
        HIVE_USER: hive
        SUPERGROUP: supergroup
    environment:
      HDFS_WAREHOUSE_DIR: /user/hive/warehouse
      HDFS_STAGING_DIR: /tmp/hadoop-yarn/staging
      HDFS_OWNER: hive:hadoop
      HDFS_PERMISSIONS: 777
    container_name: resourcemanager
    hostname: resourcemanager
    depends_on:
      - namenode
    ports:
      - "8088:8088"
    volumes:
      - ${CONFIGS_DIR}:${HADOOP_CONF_DIR}
    command: resourcemanager
    networks:
      - big-data-network
    healthcheck:
      interval: 30s
      timeout: 10s
      retries: 5
      test: [ "CMD-SHELL", "curl -f http://resourcemanager:8088/isActive" ]

  nodemanager1:
    build:
      context: ${BUILD_CONTEXT}
      args:
        HADOOP_VERSION: 3.3.6
        HIVE_VERSION: 4.0.1
        MAVEN_OPTS: -Xms512m -Xmx8192m
        JAVA_HOME: /usr/lib/jvm/java-11-openjdk-arm64
        MAVEN_HOME: /usr/share/maven
        TZ: UTC
        LANG: en_US.UTF-8
        LANGUAGE: en_US:en
        LC_ALL: en_US.UTF-8
        PYTHONIOENCODING: utf-8
        POSTGRES_JDBC_VERSION: 42.6.0
        HADOOP_USER: hadoop
        HIVE_USER: hive
        SUPERGROUP: supergroup
    environment:
      HDFS_WAREHOUSE_DIR: /user/hive/warehouse
      HDFS_STAGING_DIR: /tmp/hadoop-yarn/staging
      HDFS_OWNER: hive:hadoop
      HDFS_PERMISSIONS: 777
    container_name: nodemanager1
    hostname: nodemanager1
    depends_on:
      - resourcemanager
    ports:
      - "8042:8042"
    volumes:
      - ${CONFIGS_DIR}:${HADOOP_CONF_DIR}
    command: nodemanager
    networks:
      - big-data-network
    healthcheck:
      interval: 30s
      timeout: 10s
      retries: 5
      test: [ "CMD-SHELL", "curl -f http://localhost:8042" ]

  nodemanager2:
    build:
      context: ${BUILD_CONTEXT}
      args:
        HADOOP_VERSION: 3.3.6
        HIVE_VERSION: 4.0.1
        MAVEN_OPTS: -Xms512m -Xmx8192m
        JAVA_HOME: /usr/lib/jvm/java-11-openjdk-arm64
        MAVEN_HOME: /usr/share/maven
        TZ: UTC
        LANG: en_US.UTF-8
        LANGUAGE: en_US:en
        LC_ALL: en_US.UTF-8
        PYTHONIOENCODING: utf-8
        POSTGRES_JDBC_VERSION: 42.6.0
        HADOOP_USER: hadoop
        HIVE_USER: hive
        SUPERGROUP: supergroup
    environment:
      HDFS_WAREHOUSE_DIR: /user/hive/warehouse
      HDFS_STAGING_DIR: /tmp/hadoop-yarn/staging
      HDFS_OWNER: hive:hadoop
      HDFS_PERMISSIONS: 777
    container_name: nodemanager2
    hostname: nodemanager2
    depends_on:
      - resourcemanager
    ports:
      - "8043:8042"
    volumes:
      - ${CONFIGS_DIR}:${HADOOP_CONF_DIR}
    command: nodemanager
    networks:
      - big-data-network
    healthcheck:
      interval: 30s
      timeout: 10s
      retries: 5
      test: [ "CMD-SHELL", "curl -f http://localhost:8042" ]

  postgres:
    image: postgres:13
    container_name: postgres
    hostname: postgres
    environment:
      POSTGRES_DB: metastore
      POSTGRES_USER: hive
      POSTGRES_PASSWORD: hive
    volumes:
      - ${APP_DATA_DIR}/postgres:/var/lib/postgresql/data
    networks:
      - big-data-network
    healthcheck:
      interval: 30s
      timeout: 10s
      retries: 5
      test: [ "CMD-SHELL", "pg_isready -U hive -d metastore" ]

  metastore:
    build:
      context: ${BUILD_CONTEXT}
      args:
        HADOOP_VERSION: 3.3.6
        HIVE_VERSION: 4.0.1
        MAVEN_OPTS: -Xms512m -Xmx8192m
        JAVA_HOME: /usr/lib/jvm/java-11-openjdk-arm64
        MAVEN_HOME: /usr/share/maven
        TZ: UTC
        LANG: en_US.UTF-8
        LANGUAGE: en_US:en
        LC_ALL: en_US.UTF-8
        PYTHONIOENCODING: utf-8
        POSTGRES_JDBC_VERSION: 42.6.0
        HADOOP_USER: hadoop
        HIVE_USER: hive
        SUPERGROUP: supergroup
    environment:
      HDFS_WAREHOUSE_DIR: /user/hive/warehouse
      HDFS_STAGING_DIR: /tmp/hadoop-yarn/staging
      HDFS_OWNER: hive:hadoop
      HDFS_PERMISSIONS: 777
    container_name: metastore
    hostname: metastore
    depends_on:
      - postgres
    volumes:
      - ${CONFIGS_DIR}:${HADOOP_CONF_DIR}
      - ${CONFIGS_DIR}/hive-site.xml:/opt/hive-4.0.1/conf/hive-site.xml
      - ${APP_DATA_DIR}/metastore:/opt/hive-4.0.1/metastore_db
    command: metastore
    networks:
      - big-data-network
    healthcheck:
      interval: 30s
      timeout: 10s
      retries: 5
      test: [ "CMD-SHELL", "nc -zv localhost 9083" ]

  hiveserver2:
    build:
      context: ${BUILD_CONTEXT}
      args:
        HADOOP_VERSION: 3.3.6
        HIVE_VERSION: 4.0.1
        MAVEN_OPTS: -Xms512m -Xmx8192m
        JAVA_HOME: /usr/lib/jvm/java-11-openjdk-arm64
        MAVEN_HOME: /usr/share/maven
        TZ: UTC
        LANG: en_US.UTF-8
        LANGUAGE: en_US:en
        LC_ALL: en_US.UTF-8
        PYTHONIOENCODING: utf-8
        POSTGRES_JDBC_VERSION: 42.6.0
        HADOOP_USER: hadoop
        HIVE_USER: hive
        SUPERGROUP: supergroup
    environment:
      HDFS_WAREHOUSE_DIR: /user/hive/warehouse
      HDFS_STAGING_DIR: /tmp/hadoop-yarn/staging
      HDFS_OWNER: hive:hadoop
      HDFS_PERMISSIONS: 777
    container_name: hiveserver2
    hostname: hiveserver2
    depends_on:
      - metastore
    volumes:
      - ${CONFIGS_DIR}:${HADOOP_CONF_DIR}
      - ${CONFIGS_DIR}/hive-site.xml:/opt/hive-4.0.1/conf/hive-site.xml
      - ${APP_DATA_DIR}/datasets:/datasets
    ports:
      - "10000:10000"
    command: hiveserver2
    networks:
      - big-data-network
    healthcheck:
      interval: 30s
      timeout: 10s
      retries: 5
      test: [ "CMD-SHELL", "nc -zv localhost 10000" ]
networks:
  big-data-network:
    external: true
{% extends "base.yml.j2" %}

{% set hadoop_build_args = {
  "HADOOP_VERSION": HADOOP_VERSION,
  "HIVE_VERSION": HIVE_VERSION,
  "MAVEN_OPTS": MAVEN_OPTS,
  "JAVA_HOME": JAVA_HOME,
  "MAVEN_HOME": MAVEN_HOME,
  "TZ": TZ,
  "LANG": LANG,
  "LANGUAGE": LANGUAGE,
  "LC_ALL": LC_ALL,
  "PYTHONIOENCODING": PYTHONIOENCODING,
  "POSTGRES_JDBC_VERSION": POSTGRES_JDBC_VERSION,
  "HADOOP_USER": HADOOP_USER,
  "HIVE_USER": HIVE_USER,
  "SUPERGROUP": SUPERGROUP
} %}

{% macro hadoop_env() -%}
environment:
  HDFS_WAREHOUSE_DIR: {{ HDFS_WAREHOUSE_DIR }}
  HDFS_STAGING_DIR: {{ HDFS_STAGING_DIR }}
  HDFS_OWNER: {{ HDFS_OWNER }}
  HDFS_PERMISSIONS: {{ HDFS_PERMISSIONS }}
{%- endmacro %}

{% block services %}
  namenode:
    {{ build_context(args=hadoop_build_args) | indent(4) }}
    {{ hadoop_env() | indent(4) }}
    container_name: {{ NAMENODE }}
    hostname: {{ NAMENODE }}
    ports:
      - "9870:9870"
    volumes:
      - ${CONFIGS_DIR}:${HADOOP_CONF_DIR}
      - ${APP_DATA_DIR}/${NAMENODE}:/hadoop/dfs/name
      - ${APP_DATA_DIR}/datasets:/datasets
    command: namenode
    networks:
      - {{ BIG_DATA_NETWORK }}
    {{ healthcheck("nc -zv namenode 9000") | indent(4) }}

  datanode1:
    {{ build_context(args=hadoop_build_args) | indent(4) }}
    {{ hadoop_env() | indent(4) }}
    container_name: {{ DATANODE1 }}
    hostname: {{ DATANODE1 }}
    ports:
      - "9864:9864"
    depends_on:
      - namenode
    volumes:
      - ${CONFIGS_DIR}:${HADOOP_CONF_DIR}
      - ${APP_DATA_DIR}/${DATANODE1}:/hadoop/dfs/data
      - ${APP_DATA_DIR}/datasets:/datasets
    command: datanode
    networks:
      - {{ BIG_DATA_NETWORK }}
    {{ healthcheck("curl -f http://localhost:9864") | indent(4) }}

  datanode2:
    {{ build_context(args=hadoop_build_args) | indent(4) }}
    {{ hadoop_env() | indent(4) }}
    container_name: {{ DATANODE2 }}
    hostname: {{ DATANODE2 }}
    ports:
      - "9865:9864"
    depends_on:
      - namenode
    volumes:
      - ${CONFIGS_DIR}:${HADOOP_CONF_DIR}
      - ${APP_DATA_DIR}/${DATANODE2}:/hadoop/dfs/data
      - ${APP_DATA_DIR}/datasets:/datasets
    command: datanode
    networks:
      - {{ BIG_DATA_NETWORK }}
    {{ healthcheck("curl -f http://localhost:9864") | indent(4) }}

  resourcemanager:
    {{ build_context(args=hadoop_build_args) | indent(4) }}
    {{ hadoop_env() | indent(4) }}
    container_name: {{ RESOURCEMANAGER }}
    hostname: {{ RESOURCEMANAGER }}
    depends_on:
      - namenode
    ports:
      - "8088:8088"
    volumes:
      - ${CONFIGS_DIR}:${HADOOP_CONF_DIR}
    command: resourcemanager
    networks:
      - {{ BIG_DATA_NETWORK }}
    {{ healthcheck("curl -f http://resourcemanager:8088/isActive") | indent(4) }}

  nodemanager1:
    {{ build_context(args=hadoop_build_args) | indent(4) }}
    {{ hadoop_env() | indent(4) }}
    container_name: {{ NODEMANAGER1 }}
    hostname: {{ NODEMANAGER1 }}
    depends_on:
      - resourcemanager
    ports:
      - "8042:8042"
    volumes:
      - ${CONFIGS_DIR}:${HADOOP_CONF_DIR}
    command: nodemanager
    networks:
      - {{ BIG_DATA_NETWORK }}
    {{ healthcheck("curl -f http://localhost:8042") | indent(4) }}

  nodemanager2:
    {{ build_context(args=hadoop_build_args) | indent(4) }}
    {{ hadoop_env() | indent(4) }}
    container_name: {{ NODEMANAGER2 }}
    hostname: {{ NODEMANAGER2 }}
    depends_on:
      - resourcemanager
    ports:
      - "8043:8042"
    volumes:
      - ${CONFIGS_DIR}:${HADOOP_CONF_DIR}
    command: nodemanager
    networks:
      - {{ BIG_DATA_NETWORK }}
    {{ healthcheck("curl -f http://localhost:8042") | indent(4) }}

  postgres:
    image: postgres:13
    container_name: {{ POSTGRES }}
    hostname: {{ POSTGRES }}
    environment:
      POSTGRES_DB: metastore
      POSTGRES_USER: hive
      POSTGRES_PASSWORD: hive
    volumes:
      - ${APP_DATA_DIR}/postgres:/var/lib/postgresql/data
    networks:
      - {{ BIG_DATA_NETWORK }}
    {{ healthcheck("pg_isready -U hive -d metastore") | indent(4) }}

  metastore:
    {{ build_context(args=hadoop_build_args) | indent(4) }}
    {{ hadoop_env() | indent(4) }}
    container_name: {{ METASTORE }}
    hostname: {{ METASTORE }}
    depends_on:
      - postgres
    volumes:
      - ${CONFIGS_DIR}:${HADOOP_CONF_DIR}
      - ${CONFIGS_DIR}/hive-site.xml:/opt/hive-4.0.1/conf/hive-site.xml
      - ${APP_DATA_DIR}/metastore:/opt/hive-4.0.1/metastore_db
    command: metastore
    networks:
      - {{ BIG_DATA_NETWORK }}
    {{ healthcheck("nc -zv localhost 9083") | indent(4) }}

  hiveserver2:
    {{ build_context(args=hadoop_build_args) | indent(4) }}
    {{ hadoop_env() | indent(4) }}
    container_name: {{ HIVESERVER2 }}
    hostname: {{ HIVESERVER2 }}
    depends_on:
      - metastore
    volumes:
      - ${CONFIGS_DIR}:${HADOOP_CONF_DIR}
      - ${CONFIGS_DIR}/hive-site.xml:/opt/hive-4.0.1/conf/hive-site.xml
      - ${APP_DATA_DIR}/datasets:/datasets
    ports:
      - "10000:10000"
    command: hiveserver2
    networks:
      - {{ BIG_DATA_NETWORK }}
    {{ healthcheck("nc -zv localhost 10000") | indent(4) }}
{% endblock %}
